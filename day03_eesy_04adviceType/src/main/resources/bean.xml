<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>


    <bean id="logger" class="com.itheima.utils.Logger"></bean>

    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切入点表达式 id属性用于指定表达式的唯一标志
                 此标签写在aop:aspect标签内部只能当前切面使用。
                 它还可以写在aop:aspect外面，此时就变成了所有切面可以用,但必须在aop:aspect标签之前，因为导入了约束
            -->
        <aop:pointcut id="pt1" expression="execution(* com.itheima.service.impl.*.*(..))"/>
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置前置通知
            <aop:before method="beforePrintLog" pointcut-ref="pt1"></aop:before>-->

            <!-- 配置后置通知
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt1"></aop:after-returning>-->

            <!-- 配置异常通知
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt1"></aop:after-throwing>-->

            <!-- 配置最终通知
            <aop:after method="afterPrintLog" pointcut-ref="pt1"></aop:after>-->

            <!-- 配置环绕通知 -->
            <aop:around method="aroundPrintLog" pointcut-ref="pt1"></aop:around>


        </aop:aspect>
    </aop:config>
</beans>